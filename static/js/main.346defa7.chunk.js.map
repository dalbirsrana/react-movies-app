{"version":3,"sources":["config/api_config.js","services/api.js","components/Loading.js","components/ShowMedia.js","containers/MoviesContainer.js","containers/SearchContainer.js","containers/TvContainer.js","components/Form.js","containers/TabsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","BASE_URL","getMovies","filter","cur_page","a","url","axios","get","params","api_key","page","response","data","getTv","getSearch","search_query","query","Loading","Media","props","Array","isArray","mediaList","map","media","index","className","src","poster_path","alt","original_title","release_date","popularity","overview","MoviesContainer","state","isLoading","movies","currentPage","totalPages","category","onCategoryChange","categorySelected","setState","setMovies","onPageChange","event","cat","then","moviesList","results","total_pages","this","id","FormControl","variant","InputLabel","Select","labelId","onChange","e","target","value","label","MenuItem","Pagination","count","shape","ShowMedia","Component","SearchContainer","message","shows","TvContainer","setShow","showList","getStyles","makeStyles","theme","button","margin","spacing","marginTop","form","display","alignItems","justifyContent","textField","marginLeft","marginRight","dropdown","minWidth","Form","classes","onSubmit","TextField","name","onInputChange","Button","color","type","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","FullWidthTabs","msg","handleChange","newValue","fetchShows","preventDefault","List","Object","keys","length","handleInputChange","handleCategoryChange","AppBar","position","Tabs","indicatorColor","textColor","aria-label","Tab","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.346defa7.chunk.js","sourcesContent":["export const API_KEY = '0b97d48b2f2841254b32aebbffd63ecf'\r\nexport const BASE_URL = 'https://api.themoviedb.org/3/'","import axios from 'axios'\r\n\r\nimport { API_KEY, BASE_URL } from '../config/api_config'\r\n\r\n//movies filters: now_playing, popular, top_rated, upcoming \r\nexport const getMovies = async (filter, cur_page) => {\r\n    const url = BASE_URL + 'movie/' + filter\r\n\r\n    try {\r\n        const response = await axios.get(url, {\r\n        params: {\r\n            api_key: API_KEY,\r\n            page: cur_page\r\n        }\r\n    })\r\n    return response.data   \r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\n// TV filters: airing_today, on_the_air, popular, top_rated\r\nexport const getTv = async (filter, cur_page) => {\r\n    const url = BASE_URL + 'tv/' + filter\r\n\r\n    try {\r\n        const response = await axios.get(url, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                page: cur_page\r\n            }\r\n        })\r\n        return response.data\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\n// search filter: movie, multi, tv\r\nexport const getSearch = async (filter, search_query, cur_page) => {\r\n    const url = BASE_URL + 'search/' + filter\r\n\r\n    try {\r\n        const response = await axios.get(url, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query: search_query,\r\n                page: cur_page\r\n            }\r\n        })\r\n        return response.data\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Loading = () => <h4>Loading, please be patient :)</h4>\r\n\r\nexport default Loading\r\n","const Media = props => {\r\n    return (        \r\n        Array.isArray(props.mediaList) && props.mediaList.map( (media, index) => (\r\n            <div key={index} className=\"show-container\">\r\n                \r\n                <div className=\"show-poster\">\r\n                    <img src={\"http://image.tmdb.org/t/p/w185\" + media.poster_path} alt=\"poster\" />\r\n                </div>\r\n\r\n                <div className=\"show-details\">\r\n                    <h4>{media.original_title}</h4>\r\n\r\n                    <div>Release Date: {media.release_date} | Popularity: { media.popularity }</div>\r\n                    \r\n                    <p>{ media.overview }</p>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default Media","import React, { Component } from 'react'\r\nimport Loading from '../components/Loading'\r\nimport { getMovies } from '../services/api'\r\nimport ShowMedia from '../components/ShowMedia'\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nexport default class MoviesContainer extends Component {\r\n\r\n    state = {\r\n        isLoading: false,\r\n        movies: {},\r\n        currentPage: 1,\r\n        totalPages: 1,\r\n        category: 'popular'\r\n    }\r\n\r\n    setMovies(cat, page=1) {\r\n        getMovies( cat, page ).then(moviesList => {\r\n            this.setState({\r\n                isLoading: false,\r\n                movies: moviesList.results,\r\n                currentPage: moviesList.page,\r\n                totalPages: moviesList.total_pages\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { category } = this.state\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        // retrieving default category\r\n        this.setMovies(category)\r\n    }\r\n\r\n    onCategoryChange = categorySelected => {\r\n        this.setState({ \r\n            isLoading:true, \r\n            category: categorySelected \r\n        })\r\n        this.setMovies(categorySelected)\r\n    }\r\n\r\n    onPageChange = (event, page=1) => {\r\n        this.setState({\r\n            currentPage: page\r\n        })\r\n        this.setMovies(this.state.category, page)\r\n    }\r\n\r\n    render() {\r\n\r\n        let {isLoading, movies, category, currentPage, totalPages } = this.state\r\n\r\n\r\n        return (\r\n            <div id=\"movies-container\" className=\"tab-content\">\r\n\r\n            <FormControl variant=\"outlined\" className=\"form-control\">\r\n                <InputLabel id=\"category-label\">Category</InputLabel>\r\n                <Select\r\n                    labelId=\"category-label\"\r\n                    id=\"select-category\"\r\n                    onChange={(e)=>this.onCategoryChange(e.target.value)}\r\n                    value={category}\r\n                    label=\"Select Category\">\r\n                    <MenuItem value=\"popular\">Popular</MenuItem>\r\n                    <MenuItem value=\"now_playing\">Now Playing</MenuItem>\r\n                    <MenuItem value=\"upcoming\">Upcoming</MenuItem>\r\n                    <MenuItem value=\"top_rated\">Top Rated</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <Pagination \r\n                count={totalPages} \r\n                page={currentPage} \r\n                variant=\"outlined\" \r\n                shape=\"rounded\" \r\n                onChange={this.onPageChange}\r\n                className=\"pagination-bar\"\r\n            />\r\n\r\n            { isLoading ? ( <Loading /> ) : ( <ShowMedia mediaList={movies} /> )}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ShowMedia from '../components/ShowMedia'\r\nexport default class SearchContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"search-container\" className=\"tab-content\">\r\n                <div className=\"search-message\">\r\n                    <h2>\r\n                        {this.props.message}\r\n                    </h2>\r\n                </div>\r\n                <ShowMedia mediaList={this.props.shows} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Loading from '../components/Loading'\r\nimport { getTv } from '../services/api'\r\nimport ShowMedia from '../components/ShowMedia'\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nexport default class TvContainer extends Component {\r\n\r\n    state = {\r\n        isLoading: false,\r\n        shows: {},\r\n        currentPage: 1,\r\n        totalPages: 1,\r\n        category: 'airing_today'\r\n    }\r\n\r\n    setShow(cat, page=1) {\r\n        getTv(cat, page).then(showList => {\r\n            this.setState({\r\n                isLoading: false,\r\n                shows: showList.results,\r\n                currentPage: showList.page,\r\n                totalPages: showList.total_pages\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { category } = this.state\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        // retrieving default category\r\n        this.setShow(category)\r\n    }\r\n\r\n    onCategoryChange = categorySelected => {\r\n\r\n        this.setState({ \r\n            isLoading:true, \r\n            category: categorySelected \r\n        })\r\n        this.setShow(categorySelected)\r\n    }\r\n\r\n    onPageChange = (event, page) => {\r\n        this.setState({\r\n            currentPage: page\r\n        })\r\n        this.setShow(this.state.category, page)\r\n    }\r\n\r\n    render() {\r\n\r\n        let {isLoading, shows, category, currentPage, totalPages } = this.state\r\n\r\n        return (\r\n            <div id=\"tvShow-container\" className=\"tab-content\">\r\n\r\n            <FormControl variant=\"outlined\" className=\"form-control\">\r\n                <InputLabel id=\"category-label\">Category</InputLabel>\r\n                <Select\r\n                    labelId=\"category-label\"\r\n                    id=\"select-category\"\r\n                    onChange={(e)=>this.onCategoryChange(e.target.value)}\r\n                    value={category}\r\n                    label=\"Select Category\">\r\n                    <MenuItem value=\"airing_today\">Airing Today</MenuItem>\r\n                    <MenuItem value=\"on_the_air\">On the Air</MenuItem>\r\n                    <MenuItem value=\"popular\">Popular</MenuItem>\r\n                    <MenuItem value=\"top_rated\">Top Rated</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <Pagination \r\n                count={totalPages} \r\n                page={currentPage} \r\n                variant=\"outlined\" \r\n                shape=\"rounded\" \r\n                onChange={this.onPageChange}\r\n                className=\"pagination-bar\"\r\n            />\r\n\r\n            { isLoading ? ( <Loading /> ) : ( <ShowMedia mediaList={shows} /> )}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst getStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n    marginTop: '25px'\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  dropdown: {\r\n    minWidth: 120\r\n  }\r\n}))\r\n\r\nconst Form = props => {\r\n  const classes = getStyles()\r\n  return (\r\n    <form onSubmit={props.onSubmit} className={classes.form}>\r\n      <TextField\r\n        label='Search'\r\n        name='searchQuery'\r\n        className={classes.textField}\r\n        onChange={e => props.onInputChange(e.target.value)}\r\n        margin='normal'\r\n        variant='outlined'\r\n      />\r\n      <FormControl variant=\"outlined\" margin=\"normal\" className={classes.dropdown}>\r\n          <InputLabel id=\"search-category-label\">Search Type</InputLabel>\r\n            <Select\r\n              labelId=\"search-category-label\"\r\n              id=\"select-search-category\"\r\n              onChange={(e)=>props.onCategoryChange(e.target.value)}\r\n              value={props.category}\r\n              label=\"Search Type\">\r\n              <MenuItem value=\"multi\">Multi</MenuItem>\r\n              <MenuItem value=\"movie\">Movies</MenuItem>\r\n              <MenuItem value=\"tv\">TV Shows</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n      <Button variant='contained' color=\"primary\" className={classes.button} type='submit'>\r\n        Search\r\n      </Button>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { getSearch } from '../services/api'\r\n\r\nimport Movies from './MoviesContainer'\r\nimport Search from './SearchContainer'\r\nimport TvShows from './TvContainer'\r\nimport Form from '../components/Form'\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n        >\r\n        {value === index && (\r\n            <Box p={3}>\r\n                {children}\r\n            </Box>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default class FullWidthTabs extends Component {\r\n\r\n    state = {\r\n        value: 0,\r\n        \r\n        isLoading: false,\r\n        shows: {},\r\n        currentPage: 1,\r\n        totalPages: 1,\r\n        category: \"multi\",\r\n        query: \"\",\r\n        msg: 'Please enter a search'\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({\r\n            value: newValue\r\n        })\r\n    }\r\n    \r\n    fetchShows = (e) => {\r\n        e.preventDefault(); \r\n\r\n        this.setState({ \r\n            isLoading:true\r\n        })\r\n\r\n        getSearch(this.state.category, this.state.query, this.state.currentPage).then(List => {\r\n            this.setState({\r\n                isLoading: false,\r\n                shows: List.results,\r\n                currentPage: List.page,\r\n                totalPages: List.total_pages,\r\n                msg: \"\"\r\n            })\r\n\r\n            if (Object.keys(this.state.shows).length === 0) {\r\n                this.setState({\r\n                    msg: \"Sorry, there were no results\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleInputChange = (value) => {\r\n        if (value !== \"\") {\r\n            this.setState({\r\n                query: value,\r\n                msg: \"Please initiate a search\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                query: value,\r\n                msg: \"Please enter a search\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCategoryChange = (value) => {\r\n        this.setState({\r\n            category: value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {value} = this.state;\r\n\r\n        return (\r\n            <>\r\n            <div className=\"header-form\">\r\n                <Form\r\n                    onSubmit={this.fetchShows}\r\n                    onInputChange={this.handleInputChange}\r\n                    onCategoryChange={this.handleCategoryChange}\r\n                    category={this.state.category}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"tab-container\">\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs\"\r\n                    >\r\n                        <Tab label=\"Movies\" {...a11yProps(0)} />\r\n                        <Tab label=\"Search Results\" {...a11yProps(1)} />\r\n                        <Tab label=\"Tv Shows\" {...a11yProps(2)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                \r\n                <TabPanel value={value} index={0}>\r\n                    <Movies />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <Search shows={this.state.shows} message={this.state.msg} />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    <TvShows />\r\n                </TabPanel>\r\n\r\n        </div>\r\n        </>\r\n        );\r\n    }\r\n}","import React from 'react'\nimport './App.css';\n\nimport Tabs from './containers/TabsContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className='App-header'>\n        <h1>React Movies App</h1>\n      </header>\n      <Tabs />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}